# GitHub Actions workflow for creating Python wheels
# vim: set ts=8 sts=2 sw=2:
name: package
on:
  push:
    branches:
      - 'master'
      - 'github-actions'

#TODO Jobs should only run if tests passed

jobs:
  package-linux:
    name: Package for Linux
    runs-on: ubuntu-latest
    container:
      image: quay.io/pypa/${{matrix.plat}}
      env:
        PLAT: ${{matrix.plat}}
        PY_VERSIONS: 3.6 3.7 3.8 3.9

    strategy:
      matrix:
        plat:
          # Ideally we'd build for i686 and maybe even aarch64, but these don't
          # work with GitHub Actions.
          - manylinux2014_x86_64

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - id: md4c-version
        name: Get compatible MD4C version
        uses: ./.github/actions/md4c-version
      - name: Fetch MD4C
        uses: actions/checkout@v2
        with:
          repository: mity/md4c
          ref: release-${{steps.md4c-version.outputs.md4c-version}}
          path: md4c-lib
      - name: Build and install MD4C
        run: |
          yum install -y cmake3
          mkdir md4c-lib/build
          cd md4c-lib/build
          cmake3 -DCMAKE_INSTALL_LIBDIR:PATH=/usr/local/lib -DCMAKE_BUILD_TYPE=Release ..
          make
          make install
          #ldconfig
      - name: Build wheels
        run: |
          for ver in ${PY_VERSIONS//.}
          do
            pybins="$pybins /opt/python/cp${ver}-*/bin"
          done
          for pybin in $pybins
          do
            ${pybin}/pip wheel . --no-deps -w dist/
          done
        shell: bash
      - name: Run auditwheel repair
        run: |
          for wheel in dist/*.whl
          do
            if ! auditwheel show $wheel
            then
              echo "Skipping non-platform wheel $wheel"
            else
              auditwheel repair $wheel --plat $PLAT -w dist/
            fi
          done
        shell: bash
      - name: Remove original unaudited wheels
        run: rm -f dist/*-linux-*
      - name: Show built wheels
        run: ls dist/
        #TODO Change this to upload build artifacts

  package-others:
    name: Package for Windows and macOS
    runs-on: ${{matrix.platform}}

    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        platform:
          - windows-latest
          - macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{matrix.python-version}}
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}
      - id: md4c-version
        name: Get compatible MD4C version
        uses: ./.github/actions/md4c-version
      - name: Fetch MD4C
        uses: actions/checkout@v2
        with:
          repository: mity/md4c
          ref: release-${{steps.md4c-version.outputs.md4c-version}}
          path: md4c-lib
      - name: Build and install MD4C
        run: |
          mkdir md4c-lib/build
          cd md4c-lib/build
          cmake -DCMAKE_BUILD_TYPE=Release ..
          cmake --build . --config Release
          cmake --install .
      - name: Install Python packaging tools
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Build wheel
        run: |
          python -m pip wheel . --no-deps -w dist/
      - name: Show built wheels
        run: ls dist/
        #TODO Change this to upload build artifacts
